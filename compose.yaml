services:
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: senha
      MONGO_INITDB_DATABASE: admin
      
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8090:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: senha
      ME_CONFIG_MONGODB_URL: mongodb://root:senha@mongo:27017/
      ME_CONFIG_BASICAUTH_ENABLED: false
      ME_CONFIG_BASICAUTH_USERNAME:  root
      ME_CONFIG_BASICAUTH_PASSWORD:  senha
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_SERVER: mongo  

  grupo-2-webserver:
    build: ./web/grupo-2
    container_name: grupo-2-webserver
    ports:
      - "8000:8080"
    volumes:
      - ./web/grupo-2:/app
    
  grupo-2-api:
    build: ./api/grupo-2
    container_name: grupo-2-api
    ports:
      - "3000:3001"
    depends_on: 
      - mongo
      - mongo-express
    volumes:
      - ./api/grupo-2:/app
    env_file: 
      - ./api/grupo-2/.env
    environment:
      - MONGODB_URL=${MONGODB_URL:-mongodb://root:senha@mongo:27017/}

  backend-image:
    build:
      context: ./api-ia/backend-image
      dockerfile: Dockerfile
    ports:
      - 9001:9001
    develop:
      watch:
      - action: sync
        path: ./api-ia/backend-image/images/webservice.py
        target: images/webservice.py
      - action: rebuild
        path: ./api-ia/backend-image/requirements.txt
    volumes:
      - ./api-ia/backend-image/images:/images

  # exemplo-1-api:
  #   build: ./api/exemplo
  #   container_name: exemplo-1-api-container
  #   ports:
  #     - "3002:3002"
  #   volumes:
  #     - ./api/exemplo:/app
  #     - ./api/exemplo/uploads:/app/uploads
  #   env_file:
  #     - ./api/exemplo/.env
  #   environment:
  #     - MONGODB_URL=${MONGODB_URL:-mongodb://root:senha@mongo:27017/}

    # exemplo-1-service:
  #   build: ./web/exemplo
  #   container_name: exemplo-1-container
  #   ports:
  #     - "8002:8082"
  #   volumes:
  #     - ./web/exemplo:/app

  # backend-files:
  #   build:
  #     context: api-ia/backend-files
  #     dockerfile: Dockerfile
  #   ports:
  #     - 9000:9000
  #   develop:
  #     watch:
  #     - action: sync
  #       path: ./api-ia/backend-files/app/webservice.py
  #       target: /app/webservice.py
  #   volumes:
  #     - /app

  # whisper-webservice:
  #   ports:
  #     - '9002:9002'
  #   environment:
  #     - ASR_MODEL=base
  #     - ASR_ENGINE=openai_whisper
  #   image: 'onerahmet/openai-whisper-asr-webservice:latest'